all:
  vars:
    host_key_checking: false
    ansible_python_interpreter: /usr/bin/python3

    grandmaster_id: 00FFFFFFFFFFFFFB
    statime_sdo_id: "0"
    statime_domain: "0"
    statime_network_mode: "ipv6"

    # NOTE: generated with `lxc ls -f json | jq -c '[.[] | {key: .name, value: [.state.network | to_entries | .[] | {name: .key, address: [.value.addresses.[].address] | map(select(test("^(fd0)")))[0]}] | map(select(.address != null)) | sort_by(.address)}] | from_entries'`
  children:
    edge_servers:
      vars:
        statime_acceptable_masters:
          - "{{ grandmaster_id }}"
      hosts:
        e1:
          ansible_host: "ubuntu@{{ ips.e1[0].address }}"
          statime_uplink_interface: "{{ ips.e1[1].name }}"
          metrics_listen:
            {
              statime: "[{{ ips.e1[2].address }}]:1234",
              ntpd_rs: "[{{ ips.e1[2].address }}]:1235",
            }
        e2:
          ansible_host: "ubuntu@{{ ips.e2[0].address }}"
          statime_uplink_interface: "{{ ips.e2[1].name }}"
          metrics_listen:
            {
              statime: "[{{ ips.e2[2].address }}]:1234",
              ntpd_rs: "[{{ ips.e2[2].address }}]:1235",
            }
    others:
      hosts:
        grandmaster:
          ansible_host: "ubuntu@{{ ips.grandmaster[0].address }}"
          statime_uplink_interface: "{{ ips.grandmaster[0].name }}"
          metrics_listen: { statime: "[{{ ips.grandmaster[0].address }}]:1234" }
          grandmaster_identity: "{{ grandmaster_id }}"
        monitor:
          ansible_host: "ubuntu@{{ ips.monitor[0].address }}"
          # TODO deduplicate with upstairs
          e1:
            {
              statime: "[{{ ips.e1[2].address }}]:1234",
              ntpd_rs: "[{{ ips.e1[2].address }}]:1235",
            }
          e2:
            {
              statime: "[{{ ips.e2[2].address }}]:1234",
              ntpd_rs: "[{{ ips.e2[2].address }}]:1235",
            }
